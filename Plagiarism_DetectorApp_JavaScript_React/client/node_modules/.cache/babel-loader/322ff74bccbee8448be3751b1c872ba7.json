{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aidasharifrohani/Desktop/Final_submission/client/src/Main.tsx\";\nimport { Layout } from 'antd';\nimport React from 'react';\nimport SideBar from './SideBar';\nimport FileUploader from './FileUploader';\nimport Comparison from './Comparison';\nimport ReportTable from './ReportTable';\nimport HelpPage from './HelpPage';\nimport Title from 'antd/lib/typography/Title';\n/**\n * Describes the primary component for the program -- handles updating components \n * on the screen as well as passing information between components.\n */\n\nexport default class Main extends React.Component {\n  /**\n   * Creates component with state values necessary to pass information between\n   * child components.\n   * \n   * @param props values passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      // states whether user is logged in\n      loggedin: false,\n      // users email\n      email: \"\",\n      // users password\n      password: \"\",\n      // number of reports in user account\n      reports: 0,\n      // files for project 1\n      project1Files: null,\n      // files for project 2\n      project2Files: null,\n      // instances of plagiarism\n      instances: null,\n      // plagiarism score\n      score: null,\n      // layout component for main content - Default is FileUploader\n      layout: \"FileUploader\"\n    };\n  }\n  /**\n   * Sets whether or not there is a user logged in.\n   * \n   * @param status boolean indicating true for user, false for no user\n   */\n\n\n  setLoggedInStatus(status) {\n    this.setState({\n      loggedin: status\n    });\n  }\n  /**\n   * Updates the user email.\n   * \n   * @param email user email\n   */\n\n\n  updateEmail(email) {\n    this.setState({\n      email: email\n    });\n  }\n  /**\n   * Updates the user password\n   * \n   * @param password user password\n   */\n\n\n  updatePassword(password) {\n    this.setState({\n      password: password\n    });\n  }\n\n  setReportNumber(reportNum) {\n    this.setState({\n      reports: reportNum\n    });\n  }\n  /**\n   * Resets state after user logs out.\n   */\n\n\n  logout() {\n    this.setState({\n      loggedin: false,\n      email: \"\",\n      password: \"\",\n      reports: 0,\n      layout: \"FileUploader\"\n    });\n  }\n  /**\n   * Sets project files and instnaces of plagiarism from FileUploader to be passed\n   * to Comparison child component.\n   * \n   * @param project1Files files for project 1\n   * @param project2Files files for project 2\n   * @param instances instances of plagiarism between project files\n   */\n\n\n  setProjectFiles(project1Files, project2Files, instances, score) {\n    this.setState({\n      project1Files: project1Files,\n      project2Files: project2Files,\n      instances: instances,\n      score: score\n    });\n  }\n  /**\n   * Switches primary content to Comparison child component to display results of\n   * evaluation.\n   */\n\n\n  setComparisonLayout() {\n    this.setState({\n      layout: \"Comparison\"\n    });\n  }\n  /**\n   * Switches primary content to FileUploader child component to allow user to\n   * upload files for projects 1 and 2.\n   */\n\n\n  setFileUploadLayout() {\n    this.setState({\n      layout: \"FileUploader\"\n    });\n  }\n  /**\n   * Switches primary content to Report table child component. Allows user to view\n   * reports associated with account.\n   */\n\n\n  setReportTableLayout() {\n    this.setState({\n      layout: \"Reports\"\n    });\n  }\n  /**\n   * Switches primary content to Help page to give user instructios on how to use\n   * app.\n   */\n\n\n  setHelpLayout() {\n    this.setState({\n      layout: \"Help\"\n    });\n  }\n  /**\n   * Sets the layout for primary content on the screen.\n   * \n   * @param layout string tag indicating layout to be displayed\n   */\n\n\n  getCurrentLayout(layout) {\n    switch (layout) {\n      // if FileUploader, bind methods for switching to comparison layout as well\n      // as adding files to state of current Main component\n      case \"FileUploader\":\n        return /*#__PURE__*/_jsxDEV(FileUploader, {\n          displayComparison: this.setComparisonLayout.bind(this),\n          setProjectFiles: this.setProjectFiles.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 24\n        }, this);\n      // if Comparison, pass information in project1Files and project2Files and instances\n      // to be displayed in Comparison component\n\n      case \"Comparison\":\n        return /*#__PURE__*/_jsxDEV(Comparison, {\n          email: this.state.email,\n          password: this.state.password,\n          reports: this.state.reports,\n          loggedin: this.state.loggedin,\n          project1Files: this.state.project1Files,\n          project2Files: this.state.project2Files,\n          instances: this.state.instances,\n          score: this.state.score,\n          setReportNumber: this.setReportNumber.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 24\n        }, this);\n      // if Reports, create ReportTable component and pass user data needed to retreive\n      // reports\n\n      case \"Reports\":\n        return /*#__PURE__*/_jsxDEV(ReportTable, {\n          email: this.state.email,\n          password: this.state.password,\n          columns: this.state.columns,\n          data: this.state.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 24\n        }, this);\n      // if Help, create HelpPage component\n\n      case \"Help\":\n        return /*#__PURE__*/_jsxDEV(HelpPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 24\n        }, this);\n      // otherwise, return error message indicating no layout selected\n\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            style: {\n              color: '#d41b2e',\n              textAlign: 'center'\n            },\n            children: \"APPLICATION ERROR: NO LAYOUT SELECTED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 26\n          }, this)\n        }, void 0, false);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      style: {\n        marginLeft: 50,\n        maxWidth: 1700,\n        minWidth: 1500,\n        maxHeight: 900,\n        minHeight: 900\n      },\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {\n        loggedin: this.state.loggedin,\n        email: this.state.email,\n        password: this.state.password,\n        updateEmail: this.updateEmail.bind(this),\n        updatePassword: this.updatePassword.bind(this),\n        getFileUploadLayout: this.setFileUploadLayout.bind(this),\n        getReportTableLayout: this.setReportTableLayout.bind(this),\n        getHelpLayout: this.setHelpLayout.bind(this),\n        setLoggedInStatus: this.setLoggedInStatus.bind(this),\n        logout: this.logout.bind(this),\n        setReportNumber: this.setReportNumber.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        children: this.getCurrentLayout(this.state.layout)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aidasharifrohani/Desktop/Final_submission/client/src/Main.tsx"],"names":["Layout","React","SideBar","FileUploader","Comparison","ReportTable","HelpPage","Title","Main","Component","constructor","props","state","loggedin","email","password","reports","project1Files","project2Files","instances","score","layout","setLoggedInStatus","status","setState","updateEmail","updatePassword","setReportNumber","reportNum","logout","setProjectFiles","setComparisonLayout","setFileUploadLayout","setReportTableLayout","setHelpLayout","getCurrentLayout","bind","columns","data","color","textAlign","render","marginLeft","maxWidth","minWidth","maxHeight","minHeight"],"mappings":"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","sourcesContent":["import { Layout } from 'antd';\nimport React from 'react';\nimport SideBar from './SideBar';\nimport FileUploader from './FileUploader';\nimport Comparison from './Comparison'\nimport ReportTable from './ReportTable';\nimport HelpPage from './HelpPage';\nimport Title from 'antd/lib/typography/Title';\n\n/**\n * Describes the primary component for the program -- handles updating components \n * on the screen as well as passing information between components.\n */\nexport default class Main extends React.Component<{}, any> {\n\n    /**\n     * Creates component with state values necessary to pass information between\n     * child components.\n     * \n     * @param props values passed from parent component\n     */\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            // states whether user is logged in\n            loggedin: false,\n            // users email\n            email: \"\",\n            // users password\n            password: \"\",\n            // number of reports in user account\n            reports: 0,\n            // files for project 1\n            project1Files: null,\n            // files for project 2\n            project2Files: null,\n            // instances of plagiarism\n            instances: null,\n            // plagiarism score\n            score: null,\n            // layout component for main content - Default is FileUploader\n            layout: \"FileUploader\"\n        }\n    }\n\n    /**\n     * Sets whether or not there is a user logged in.\n     * \n     * @param status boolean indicating true for user, false for no user\n     */\n    setLoggedInStatus(status: boolean) : void {\n        this.setState({\n            loggedin: status\n        })\n    }\n\n    /**\n     * Updates the user email.\n     * \n     * @param email user email\n     */\n    updateEmail(email: string) : void {\n        this.setState({\n            email: email\n        })\n    }\n\n    /**\n     * Updates the user password\n     * \n     * @param password user password\n     */\n    updatePassword(password: string) : void {\n        this.setState({\n            password: password\n        })\n    }\n\n    setReportNumber(reportNum: number) : void {\n        this.setState({\n            reports: reportNum\n        })\n    }\n\n    /**\n     * Resets state after user logs out.\n     */\n    logout() : void {\n        this.setState({\n            loggedin: false,\n            email: \"\",\n            password: \"\",\n            reports: 0,\n            layout: \"FileUploader\"\n        })\n    }\n\n\n\n    /**\n     * Sets project files and instnaces of plagiarism from FileUploader to be passed\n     * to Comparison child component.\n     * \n     * @param project1Files files for project 1\n     * @param project2Files files for project 2\n     * @param instances instances of plagiarism between project files\n     */\n    setProjectFiles(project1Files: object[], project2Files: object[], instances: object[], score: number) : void {\n        this.setState({\n            project1Files: project1Files,\n            project2Files: project2Files,\n            instances: instances,\n            score: score\n        });\n    }\n\n    /**\n     * Switches primary content to Comparison child component to display results of\n     * evaluation.\n     */\n    setComparisonLayout() : void {\n        this.setState({ layout: \"Comparison\"});\n    }\n\n    /**\n     * Switches primary content to FileUploader child component to allow user to\n     * upload files for projects 1 and 2.\n     */\n    setFileUploadLayout() : void {\n        this.setState({ layout: \"FileUploader\"});\n    }\n\n    /**\n     * Switches primary content to Report table child component. Allows user to view\n     * reports associated with account.\n     */\n    setReportTableLayout() : void {\n        this.setState({ layout: \"Reports\" })\n    }\n\n    /**\n     * Switches primary content to Help page to give user instructios on how to use\n     * app.\n     */\n    setHelpLayout() : void {\n        this.setState({ layout: \"Help\" })\n    }\n\n    /**\n     * Sets the layout for primary content on the screen.\n     * \n     * @param layout string tag indicating layout to be displayed\n     */\n    getCurrentLayout(layout: string) : JSX.Element {\n        switch (layout) {\n            // if FileUploader, bind methods for switching to comparison layout as well\n            // as adding files to state of current Main component\n            case \"FileUploader\":\n                return <FileUploader \n                    displayComparison={this.setComparisonLayout.bind(this)}\n                    setProjectFiles={this.setProjectFiles.bind(this)} \n                />;\n            // if Comparison, pass information in project1Files and project2Files and instances\n            // to be displayed in Comparison component\n            case \"Comparison\":\n                return <Comparison \n                    email={this.state.email}\n                    password={this.state.password}\n                    reports={this.state.reports}\n                    loggedin={this.state.loggedin}\n                    project1Files={this.state.project1Files}\n                    project2Files={this.state.project2Files}\n                    instances={this.state.instances}\n                    score={this.state.score}\n                    setReportNumber={this.setReportNumber.bind(this)}\n                />;\n            // if Reports, create ReportTable component and pass user data needed to retreive\n            // reports\n            case \"Reports\":\n                return <ReportTable\n                    email={this.state.email}\n                    password={this.state.password}\n                    columns={this.state.columns}\n                    data={this.state.data}\n                />;\n            // if Help, create HelpPage component\n            case \"Help\":\n                return <HelpPage/>\n            // otherwise, return error message indicating no layout selected\n            default:\n                return <><Title \n                    style={{color:'#d41b2e', textAlign:'center'}}\n                >\n                    APPLICATION ERROR: NO LAYOUT SELECTED\n                </Title></>\n        }\n    }\n\n    render() {\n        return <Layout style={{marginLeft:50, maxWidth:1700, minWidth:1500, maxHeight:900, minHeight:900}}>\n                <SideBar\n                    loggedin={this.state.loggedin}\n                    email={this.state.email}\n                    password={this.state.password}\n                    updateEmail={this.updateEmail.bind(this)}\n                    updatePassword={this.updatePassword.bind(this)} \n                    getFileUploadLayout={this.setFileUploadLayout.bind(this)}\n                    getReportTableLayout={this.setReportTableLayout.bind(this)}\n                    getHelpLayout={this.setHelpLayout.bind(this)}\n                    setLoggedInStatus={this.setLoggedInStatus.bind(this)}\n                    logout={this.logout.bind(this)}\n                    setReportNumber={this.setReportNumber.bind(this)}\n                />\n                <Layout >\n                    { this.getCurrentLayout(this.state.layout) }\n                </Layout>\n        </Layout>\n    }\n}"]},"metadata":{},"sourceType":"module"}